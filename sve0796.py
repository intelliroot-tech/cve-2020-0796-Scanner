import click
import ipaddress
import socket
import struct
from concurrent.futures import ThreadPoolExecutor


pkt = b'\x00\x00\x00\xc0\xfeSMB@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00$\x00\x08\x00\x01\x00\x00\x00\x7f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00x\x00\x00\x00\x02\x00\x00\x00\x02\x02\x10\x02"\x02$\x02\x00\x03\x02\x03\x10\x03\x11\x03\x00\x00\x00\x00\x01\x00&\x00\x00\x00\x00\x00\x01\x00 \x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\n\x00\x00\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00'




def exploit(s,host):
    #Source : https://github.com/cve-2020-0796/cve-2020-0796
    s.send(pkt)
    if len(s.recv(4)) >= 4:
        nb, = struct.unpack(">I", s.recv(4))
        res = s.recv(nb)
        if res[68:70] == b"\x11\x03" or res[70:72] == b"\x02\x00":
            pass
        else:
            print("[+] > {} is vulnerable".format(host))
    else:
        print("[!] > {} not running Microsoft SMB".format(host))

def subnetsplit(i):
    subnet = i.split("/")
    if(subnet[1] <= "24"):
        net4 = ipaddress.ip_network(i)
        with ThreadPoolExecutor(max_workers=20) as executor:
            for x in net4.hosts():
                executor.submit(portscan, str(x))
    else:
        print("[!] > Please provide subnet mask lower or equal to 24 for faster scan")


def portscan(ip):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.settimeout(5)
        conn = s.connect_ex((ip,445))
        if(conn == 0):
            exploit(s,ip)
        else:
            pass    
        

@click.command()
@click.option("--ip", help="Enter ip addr")
@click.option("--subnet", help="Enter subnet addr")

def main(ip,subnet):
    if ip:
        print("[#] > Testing System {} for cve-2020-0796 vulnerability ".format(ip))
        portscan(ip)
    if subnet:
        print("[#] > Finding cve-2020-0796 vulnerable systems in subnet {} ".format(subnet))
        subnetsplit(subnet)

if __name__ == "__main__":
    main()
